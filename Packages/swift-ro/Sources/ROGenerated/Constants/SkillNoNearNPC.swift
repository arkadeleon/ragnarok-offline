//
//  SkillNoNearNPC.swift
//  RagnarokOffline
//
//  Generated by ROGenerator.
//

/// Converted from `e_skill_nonear_npc` in `map/skill.hpp`.
public enum SkillNoNearNPC: CaseIterable, RawRepresentable, Sendable {
    case warpportal
    case shop
    case npc
    case tomb

    public var rawValue: Int {
        switch self {
        case .warpportal: 0x1
        case .shop: 0x2
        case .npc: 0x4
        case .tomb: 0x8
        }
    }

    public init?(rawValue: Int) {
        switch rawValue {
        case 0x1: self = .warpportal
        case 0x2: self = .shop
        case 0x4: self = .npc
        case 0x8: self = .tomb
        default: return nil
        }
    }
}

extension SkillNoNearNPC: CodingKey, CodingKeyRepresentable, Decodable {
    public init?(stringValue: String) {
        switch stringValue.uppercased() {
        case "WARPPORTAL": self = .warpportal
        case "SHOP": self = .shop
        case "NPC": self = .npc
        case "TOMB": self = .tomb
        default: return nil
        }
    }

    public init?<T>(codingKey: T) where T: CodingKey {
        self.init(stringValue: codingKey.stringValue)
    }

    public init(from decoder: any Decoder) throws {
        let container = try decoder.singleValueContainer()
        let stringValue = try container.decode(String.self)
        if let value = Self.init(stringValue: stringValue) {
            self = value
        } else {
            throw DecodingError.dataCorruptedError(in: container, debugDescription: "Could not initialize \(Self.self) from invalid string value \(stringValue)")
        }
    }
}
