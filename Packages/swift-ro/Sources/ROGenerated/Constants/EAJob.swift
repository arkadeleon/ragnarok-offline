//
//  EAJob.swift
//  RagnarokOffline
//
//  Generated by ROGenerator.
//

public enum EAJob: CaseIterable, RawRepresentable, Sendable {
    case novice
    case swordman
    case mage
    case archer
    case acolyte
    case merchant
    case thief
    case taekwon
    case wedding
    case gunslinger
    case ninja
    case xmas
    case summer
    case hanbok
    case gangsi
    case oktoberfest
    case summoner
    case summer2
    case super_novice
    case knight
    case wizard
    case hunter
    case priest
    case blacksmith
    case assassin
    case star_gladiator
    case rebellion
    case kagerouoboro
    case death_knight
    case crusader
    case sage
    case barddancer
    case monk
    case alchemist
    case rogue
    case soul_linker
    case dark_collector
    case novice_high
    case swordman_high
    case mage_high
    case archer_high
    case acolyte_high
    case merchant_high
    case thief_high
    case lord_knight
    case high_wizard
    case sniper
    case high_priest
    case whitesmith
    case assassin_cross
    case paladin
    case professor
    case clowngypsy
    case champion
    case creator
    case stalker
    case baby
    case baby_swordman
    case baby_mage
    case baby_archer
    case baby_acolyte
    case baby_merchant
    case baby_thief
    case baby_taekwon
    case baby_gunslinger
    case baby_ninja
    case baby_summoner
    case super_baby
    case baby_knight
    case baby_wizard
    case baby_hunter
    case baby_priest
    case baby_blacksmith
    case baby_assassin
    case baby_star_gladiator
    case baby_rebellion
    case baby_kagerouoboro
    case baby_crusader
    case baby_sage
    case baby_barddancer
    case baby_monk
    case baby_alchemist
    case baby_rogue
    case baby_soul_linker
    case super_novice_e
    case rune_knight
    case warlock
    case ranger
    case arch_bishop
    case mechanic
    case guillotine_cross
    case star_emperor
    case royal_guard
    case sorcerer
    case minstrelwanderer
    case sura
    case genetic
    case shadow_chaser
    case soul_reaper
    case rune_knight_t
    case warlock_t
    case ranger_t
    case arch_bishop_t
    case mechanic_t
    case guillotine_cross_t
    case royal_guard_t
    case sorcerer_t
    case minstrelwanderer_t
    case sura_t
    case genetic_t
    case shadow_chaser_t
    case super_baby_e
    case baby_rune_knight
    case baby_warlock
    case baby_ranger
    case baby_arch_bishop
    case baby_mechanic
    case baby_guillotine_cross
    case baby_star_emperor
    case baby_royal_guard
    case baby_sorcerer
    case baby_minstrelwanderer
    case baby_sura
    case baby_genetic
    case baby_shadow_chaser
    case baby_soul_reaper
    case hyper_novice
    case dragon_knight
    case arch_mage
    case windhawk
    case cardinal
    case meister
    case shadow_cross
    case sky_emperor
    case night_watch
    case shinkiro_shiranui
    case spirit_handler
    case imperial_guard
    case elemental_master
    case troubadourtrouvere
    case inquisitor
    case biolo
    case abyss_chaser
    case soul_ascetic

    public var rawValue: Int {
        switch self {
        case .novice: 0x0
        case .swordman: 0x1
        case .mage: 0x2
        case .archer: 0x3
        case .acolyte: 0x4
        case .merchant: 0x5
        case .thief: 0x6
        case .taekwon: 0x7
        case .wedding: 0x8
        case .gunslinger: 0x9
        case .ninja: 0xa
        case .xmas: 0xb
        case .summer: 0xc
        case .hanbok: 0xd
        case .gangsi: 0xe
        case .oktoberfest: 0xf
        case .summoner: 0x10
        case .summer2: 0x11
        case .super_novice: 0x100
        case .knight: 0x101
        case .wizard: 0x102
        case .hunter: 0x103
        case .priest: 0x104
        case .blacksmith: 0x105
        case .assassin: 0x106
        case .star_gladiator: 0x107
        case .rebellion: 0x109
        case .kagerouoboro: 0x10a
        case .death_knight: 0x10e
        case .crusader: 0x201
        case .sage: 0x202
        case .barddancer: 0x203
        case .monk: 0x204
        case .alchemist: 0x205
        case .rogue: 0x206
        case .soul_linker: 0x207
        case .dark_collector: 0x20e
        case .novice_high: 0x1000
        case .swordman_high: 0x1001
        case .mage_high: 0x1002
        case .archer_high: 0x1003
        case .acolyte_high: 0x1004
        case .merchant_high: 0x1005
        case .thief_high: 0x1006
        case .lord_knight: 0x1101
        case .high_wizard: 0x1102
        case .sniper: 0x1103
        case .high_priest: 0x1104
        case .whitesmith: 0x1105
        case .assassin_cross: 0x1106
        case .paladin: 0x1201
        case .professor: 0x1202
        case .clowngypsy: 0x1203
        case .champion: 0x1204
        case .creator: 0x1205
        case .stalker: 0x1206
        case .baby: 0x2000
        case .baby_swordman: 0x2001
        case .baby_mage: 0x2002
        case .baby_archer: 0x2003
        case .baby_acolyte: 0x2004
        case .baby_merchant: 0x2005
        case .baby_thief: 0x2006
        case .baby_taekwon: 0x2007
        case .baby_gunslinger: 0x2009
        case .baby_ninja: 0x200a
        case .baby_summoner: 0x2010
        case .super_baby: 0x2100
        case .baby_knight: 0x2101
        case .baby_wizard: 0x2102
        case .baby_hunter: 0x2103
        case .baby_priest: 0x2104
        case .baby_blacksmith: 0x2105
        case .baby_assassin: 0x2106
        case .baby_star_gladiator: 0x2107
        case .baby_rebellion: 0x2109
        case .baby_kagerouoboro: 0x210a
        case .baby_crusader: 0x2201
        case .baby_sage: 0x2202
        case .baby_barddancer: 0x2203
        case .baby_monk: 0x2204
        case .baby_alchemist: 0x2205
        case .baby_rogue: 0x2206
        case .baby_soul_linker: 0x2207
        case .super_novice_e: 0x4100
        case .rune_knight: 0x4101
        case .warlock: 0x4102
        case .ranger: 0x4103
        case .arch_bishop: 0x4104
        case .mechanic: 0x4105
        case .guillotine_cross: 0x4106
        case .star_emperor: 0x4107
        case .royal_guard: 0x4201
        case .sorcerer: 0x4202
        case .minstrelwanderer: 0x4203
        case .sura: 0x4204
        case .genetic: 0x4205
        case .shadow_chaser: 0x4206
        case .soul_reaper: 0x4207
        case .rune_knight_t: 0x5101
        case .warlock_t: 0x5102
        case .ranger_t: 0x5103
        case .arch_bishop_t: 0x5104
        case .mechanic_t: 0x5105
        case .guillotine_cross_t: 0x5106
        case .royal_guard_t: 0x5201
        case .sorcerer_t: 0x5202
        case .minstrelwanderer_t: 0x5203
        case .sura_t: 0x5204
        case .genetic_t: 0x5205
        case .shadow_chaser_t: 0x5206
        case .super_baby_e: 0x6100
        case .baby_rune_knight: 0x6101
        case .baby_warlock: 0x6102
        case .baby_ranger: 0x6103
        case .baby_arch_bishop: 0x6104
        case .baby_mechanic: 0x6105
        case .baby_guillotine_cross: 0x6106
        case .baby_star_emperor: 0x6107
        case .baby_royal_guard: 0x6201
        case .baby_sorcerer: 0x6202
        case .baby_minstrelwanderer: 0x6203
        case .baby_sura: 0x6204
        case .baby_genetic: 0x6205
        case .baby_shadow_chaser: 0x6206
        case .baby_soul_reaper: 0x6207
        case .hyper_novice: 0xd100
        case .dragon_knight: 0xd101
        case .arch_mage: 0xd102
        case .windhawk: 0xd103
        case .cardinal: 0xd104
        case .meister: 0xd105
        case .shadow_cross: 0xd106
        case .sky_emperor: 0xd107
        case .night_watch: 0xd109
        case .shinkiro_shiranui: 0xd10a
        case .spirit_handler: 0xd110
        case .imperial_guard: 0xd201
        case .elemental_master: 0xd202
        case .troubadourtrouvere: 0xd203
        case .inquisitor: 0xd204
        case .biolo: 0xd205
        case .abyss_chaser: 0xd206
        case .soul_ascetic: 0xd207
        }
    }

    public init?(rawValue: Int) {
        switch rawValue {
        case 0x0: self = .novice
        case 0x1: self = .swordman
        case 0x2: self = .mage
        case 0x3: self = .archer
        case 0x4: self = .acolyte
        case 0x5: self = .merchant
        case 0x6: self = .thief
        case 0x7: self = .taekwon
        case 0x8: self = .wedding
        case 0x9: self = .gunslinger
        case 0xa: self = .ninja
        case 0xb: self = .xmas
        case 0xc: self = .summer
        case 0xd: self = .hanbok
        case 0xe: self = .gangsi
        case 0xf: self = .oktoberfest
        case 0x10: self = .summoner
        case 0x11: self = .summer2
        case 0x100: self = .super_novice
        case 0x101: self = .knight
        case 0x102: self = .wizard
        case 0x103: self = .hunter
        case 0x104: self = .priest
        case 0x105: self = .blacksmith
        case 0x106: self = .assassin
        case 0x107: self = .star_gladiator
        case 0x109: self = .rebellion
        case 0x10a: self = .kagerouoboro
        case 0x10e: self = .death_knight
        case 0x201: self = .crusader
        case 0x202: self = .sage
        case 0x203: self = .barddancer
        case 0x204: self = .monk
        case 0x205: self = .alchemist
        case 0x206: self = .rogue
        case 0x207: self = .soul_linker
        case 0x20e: self = .dark_collector
        case 0x1000: self = .novice_high
        case 0x1001: self = .swordman_high
        case 0x1002: self = .mage_high
        case 0x1003: self = .archer_high
        case 0x1004: self = .acolyte_high
        case 0x1005: self = .merchant_high
        case 0x1006: self = .thief_high
        case 0x1101: self = .lord_knight
        case 0x1102: self = .high_wizard
        case 0x1103: self = .sniper
        case 0x1104: self = .high_priest
        case 0x1105: self = .whitesmith
        case 0x1106: self = .assassin_cross
        case 0x1201: self = .paladin
        case 0x1202: self = .professor
        case 0x1203: self = .clowngypsy
        case 0x1204: self = .champion
        case 0x1205: self = .creator
        case 0x1206: self = .stalker
        case 0x2000: self = .baby
        case 0x2001: self = .baby_swordman
        case 0x2002: self = .baby_mage
        case 0x2003: self = .baby_archer
        case 0x2004: self = .baby_acolyte
        case 0x2005: self = .baby_merchant
        case 0x2006: self = .baby_thief
        case 0x2007: self = .baby_taekwon
        case 0x2009: self = .baby_gunslinger
        case 0x200a: self = .baby_ninja
        case 0x2010: self = .baby_summoner
        case 0x2100: self = .super_baby
        case 0x2101: self = .baby_knight
        case 0x2102: self = .baby_wizard
        case 0x2103: self = .baby_hunter
        case 0x2104: self = .baby_priest
        case 0x2105: self = .baby_blacksmith
        case 0x2106: self = .baby_assassin
        case 0x2107: self = .baby_star_gladiator
        case 0x2109: self = .baby_rebellion
        case 0x210a: self = .baby_kagerouoboro
        case 0x2201: self = .baby_crusader
        case 0x2202: self = .baby_sage
        case 0x2203: self = .baby_barddancer
        case 0x2204: self = .baby_monk
        case 0x2205: self = .baby_alchemist
        case 0x2206: self = .baby_rogue
        case 0x2207: self = .baby_soul_linker
        case 0x4100: self = .super_novice_e
        case 0x4101: self = .rune_knight
        case 0x4102: self = .warlock
        case 0x4103: self = .ranger
        case 0x4104: self = .arch_bishop
        case 0x4105: self = .mechanic
        case 0x4106: self = .guillotine_cross
        case 0x4107: self = .star_emperor
        case 0x4201: self = .royal_guard
        case 0x4202: self = .sorcerer
        case 0x4203: self = .minstrelwanderer
        case 0x4204: self = .sura
        case 0x4205: self = .genetic
        case 0x4206: self = .shadow_chaser
        case 0x4207: self = .soul_reaper
        case 0x5101: self = .rune_knight_t
        case 0x5102: self = .warlock_t
        case 0x5103: self = .ranger_t
        case 0x5104: self = .arch_bishop_t
        case 0x5105: self = .mechanic_t
        case 0x5106: self = .guillotine_cross_t
        case 0x5201: self = .royal_guard_t
        case 0x5202: self = .sorcerer_t
        case 0x5203: self = .minstrelwanderer_t
        case 0x5204: self = .sura_t
        case 0x5205: self = .genetic_t
        case 0x5206: self = .shadow_chaser_t
        case 0x6100: self = .super_baby_e
        case 0x6101: self = .baby_rune_knight
        case 0x6102: self = .baby_warlock
        case 0x6103: self = .baby_ranger
        case 0x6104: self = .baby_arch_bishop
        case 0x6105: self = .baby_mechanic
        case 0x6106: self = .baby_guillotine_cross
        case 0x6107: self = .baby_star_emperor
        case 0x6201: self = .baby_royal_guard
        case 0x6202: self = .baby_sorcerer
        case 0x6203: self = .baby_minstrelwanderer
        case 0x6204: self = .baby_sura
        case 0x6205: self = .baby_genetic
        case 0x6206: self = .baby_shadow_chaser
        case 0x6207: self = .baby_soul_reaper
        case 0xd100: self = .hyper_novice
        case 0xd101: self = .dragon_knight
        case 0xd102: self = .arch_mage
        case 0xd103: self = .windhawk
        case 0xd104: self = .cardinal
        case 0xd105: self = .meister
        case 0xd106: self = .shadow_cross
        case 0xd107: self = .sky_emperor
        case 0xd109: self = .night_watch
        case 0xd10a: self = .shinkiro_shiranui
        case 0xd110: self = .spirit_handler
        case 0xd201: self = .imperial_guard
        case 0xd202: self = .elemental_master
        case 0xd203: self = .troubadourtrouvere
        case 0xd204: self = .inquisitor
        case 0xd205: self = .biolo
        case 0xd206: self = .abyss_chaser
        case 0xd207: self = .soul_ascetic
        default: return nil
        }
    }
}

extension EAJob: CodingKey, CodingKeyRepresentable, Decodable {
    public init?(stringValue: String) {
        switch stringValue.uppercased() {
        case "NOVICE": self = .novice
        case "SWORDMAN": self = .swordman
        case "MAGE": self = .mage
        case "ARCHER": self = .archer
        case "ACOLYTE": self = .acolyte
        case "MERCHANT": self = .merchant
        case "THIEF": self = .thief
        case "TAEKWON": self = .taekwon
        case "WEDDING": self = .wedding
        case "GUNSLINGER": self = .gunslinger
        case "NINJA": self = .ninja
        case "XMAS": self = .xmas
        case "SUMMER": self = .summer
        case "HANBOK": self = .hanbok
        case "GANGSI": self = .gangsi
        case "OKTOBERFEST": self = .oktoberfest
        case "SUMMONER": self = .summoner
        case "SUMMER2": self = .summer2
        case "SUPER_NOVICE", "SUPERNOVICE": self = .super_novice
        case "KNIGHT": self = .knight
        case "WIZARD": self = .wizard
        case "HUNTER": self = .hunter
        case "PRIEST": self = .priest
        case "BLACKSMITH": self = .blacksmith
        case "ASSASSIN": self = .assassin
        case "STAR_GLADIATOR": self = .star_gladiator
        case "REBELLION": self = .rebellion
        case "KAGEROUOBORO": self = .kagerouoboro
        case "DEATH_KNIGHT": self = .death_knight
        case "CRUSADER": self = .crusader
        case "SAGE": self = .sage
        case "BARDDANCER": self = .barddancer
        case "MONK": self = .monk
        case "ALCHEMIST": self = .alchemist
        case "ROGUE": self = .rogue
        case "SOUL_LINKER": self = .soul_linker
        case "DARK_COLLECTOR": self = .dark_collector
        case "NOVICE_HIGH": self = .novice_high
        case "SWORDMAN_HIGH": self = .swordman_high
        case "MAGE_HIGH": self = .mage_high
        case "ARCHER_HIGH": self = .archer_high
        case "ACOLYTE_HIGH": self = .acolyte_high
        case "MERCHANT_HIGH": self = .merchant_high
        case "THIEF_HIGH": self = .thief_high
        case "LORD_KNIGHT": self = .lord_knight
        case "HIGH_WIZARD": self = .high_wizard
        case "SNIPER": self = .sniper
        case "HIGH_PRIEST": self = .high_priest
        case "WHITESMITH": self = .whitesmith
        case "ASSASSIN_CROSS": self = .assassin_cross
        case "PALADIN": self = .paladin
        case "PROFESSOR": self = .professor
        case "CLOWNGYPSY": self = .clowngypsy
        case "CHAMPION": self = .champion
        case "CREATOR": self = .creator
        case "STALKER": self = .stalker
        case "BABY": self = .baby
        case "BABY_SWORDMAN": self = .baby_swordman
        case "BABY_MAGE": self = .baby_mage
        case "BABY_ARCHER": self = .baby_archer
        case "BABY_ACOLYTE": self = .baby_acolyte
        case "BABY_MERCHANT": self = .baby_merchant
        case "BABY_THIEF": self = .baby_thief
        case "BABY_TAEKWON": self = .baby_taekwon
        case "BABY_GUNSLINGER": self = .baby_gunslinger
        case "BABY_NINJA": self = .baby_ninja
        case "BABY_SUMMONER": self = .baby_summoner
        case "SUPER_BABY": self = .super_baby
        case "BABY_KNIGHT": self = .baby_knight
        case "BABY_WIZARD": self = .baby_wizard
        case "BABY_HUNTER": self = .baby_hunter
        case "BABY_PRIEST": self = .baby_priest
        case "BABY_BLACKSMITH": self = .baby_blacksmith
        case "BABY_ASSASSIN": self = .baby_assassin
        case "BABY_STAR_GLADIATOR": self = .baby_star_gladiator
        case "BABY_REBELLION": self = .baby_rebellion
        case "BABY_KAGEROUOBORO": self = .baby_kagerouoboro
        case "BABY_CRUSADER": self = .baby_crusader
        case "BABY_SAGE": self = .baby_sage
        case "BABY_BARDDANCER": self = .baby_barddancer
        case "BABY_MONK": self = .baby_monk
        case "BABY_ALCHEMIST": self = .baby_alchemist
        case "BABY_ROGUE": self = .baby_rogue
        case "BABY_SOUL_LINKER": self = .baby_soul_linker
        case "SUPER_NOVICE_E": self = .super_novice_e
        case "RUNE_KNIGHT": self = .rune_knight
        case "WARLOCK": self = .warlock
        case "RANGER": self = .ranger
        case "ARCH_BISHOP": self = .arch_bishop
        case "MECHANIC": self = .mechanic
        case "GUILLOTINE_CROSS": self = .guillotine_cross
        case "STAR_EMPEROR": self = .star_emperor
        case "ROYAL_GUARD": self = .royal_guard
        case "SORCERER": self = .sorcerer
        case "MINSTRELWANDERER": self = .minstrelwanderer
        case "SURA": self = .sura
        case "GENETIC": self = .genetic
        case "SHADOW_CHASER": self = .shadow_chaser
        case "SOUL_REAPER": self = .soul_reaper
        case "RUNE_KNIGHT_T": self = .rune_knight_t
        case "WARLOCK_T": self = .warlock_t
        case "RANGER_T": self = .ranger_t
        case "ARCH_BISHOP_T": self = .arch_bishop_t
        case "MECHANIC_T": self = .mechanic_t
        case "GUILLOTINE_CROSS_T": self = .guillotine_cross_t
        case "ROYAL_GUARD_T": self = .royal_guard_t
        case "SORCERER_T": self = .sorcerer_t
        case "MINSTRELWANDERER_T": self = .minstrelwanderer_t
        case "SURA_T": self = .sura_t
        case "GENETIC_T": self = .genetic_t
        case "SHADOW_CHASER_T": self = .shadow_chaser_t
        case "SUPER_BABY_E": self = .super_baby_e
        case "BABY_RUNE_KNIGHT": self = .baby_rune_knight
        case "BABY_WARLOCK": self = .baby_warlock
        case "BABY_RANGER": self = .baby_ranger
        case "BABY_ARCH_BISHOP": self = .baby_arch_bishop
        case "BABY_MECHANIC": self = .baby_mechanic
        case "BABY_GUILLOTINE_CROSS": self = .baby_guillotine_cross
        case "BABY_STAR_EMPEROR": self = .baby_star_emperor
        case "BABY_ROYAL_GUARD": self = .baby_royal_guard
        case "BABY_SORCERER": self = .baby_sorcerer
        case "BABY_MINSTRELWANDERER": self = .baby_minstrelwanderer
        case "BABY_SURA": self = .baby_sura
        case "BABY_GENETIC": self = .baby_genetic
        case "BABY_SHADOW_CHASER": self = .baby_shadow_chaser
        case "BABY_SOUL_REAPER": self = .baby_soul_reaper
        case "HYPER_NOVICE": self = .hyper_novice
        case "DRAGON_KNIGHT": self = .dragon_knight
        case "ARCH_MAGE": self = .arch_mage
        case "WINDHAWK": self = .windhawk
        case "CARDINAL": self = .cardinal
        case "MEISTER": self = .meister
        case "SHADOW_CROSS": self = .shadow_cross
        case "SKY_EMPEROR": self = .sky_emperor
        case "NIGHT_WATCH": self = .night_watch
        case "SHINKIRO_SHIRANUI": self = .shinkiro_shiranui
        case "SPIRIT_HANDLER": self = .spirit_handler
        case "IMPERIAL_GUARD": self = .imperial_guard
        case "ELEMENTAL_MASTER": self = .elemental_master
        case "TROUBADOURTROUVERE": self = .troubadourtrouvere
        case "INQUISITOR": self = .inquisitor
        case "BIOLO": self = .biolo
        case "ABYSS_CHASER": self = .abyss_chaser
        case "SOUL_ASCETIC": self = .soul_ascetic
        default: return nil
        }
    }

    public init?<T>(codingKey: T) where T: CodingKey {
        self.init(stringValue: codingKey.stringValue)
    }

    public init(from decoder: any Decoder) throws {
        let container = try decoder.singleValueContainer()
        let stringValue = try container.decode(String.self)
        if let value = Self.init(stringValue: stringValue) {
            self = value
        } else {
            throw DecodingError.dataCorruptedError(in: container, debugDescription: "Could not initialize \(Self.self) from invalid string value \(stringValue)")
        }
    }
}
