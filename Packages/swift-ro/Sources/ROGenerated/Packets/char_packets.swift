//
//  char_packets.swift
//  RagnarokOffline
//
//  Generated by ROCodeGenerator.
//

import ROCore

public let HEADER_HC_ACK_CHANGE_CHARACTER_SLOT = 0xb70
public let HEADER_HC_ACK_CHARINFO_PER_PAGE = 0xb72
public let HEADER_HC_ACCEPT_MAKECHAR = 0xb6f
public let HEADER_HC_NOTIFY_ACCESSIBLE_MAPNAME = 0x840
public let HEADER_CH_SELECT_ACCESSIBLE_MAPNAME = 0x841

public struct PACKET_HC_NOTIFY_ACCESSIBLE_MAPNAME_sub: Sendable {
    public var status: Int32
    @FixedSizeArray(size: 16, initialValue: .init())
    public var map: [Int8]
    public init() {
        status = .init()
    }
}

public struct PACKET_HC_NOTIFY_ACCESSIBLE_MAPNAME: Sendable {
    public var packetType: Int16
    public var packetLength: Int16
    public var maps: [PACKET_HC_NOTIFY_ACCESSIBLE_MAPNAME_sub]
    public init() {
        packetType = .init()
        packetLength = .init()
        maps = .init()
    }
}

public struct PACKET_CH_SELECT_ACCESSIBLE_MAPNAME: Sendable {
    public var packetType: Int16
    public var slot: Int8
    public var mapnumber: Int8
    public init() {
        packetType = .init()
        slot = .init()
        mapnumber = .init()
    }
}
