//
//  Race2.swift
//  RagnarokOffline
//
//  Generated by ROCodeGenerator.
//

/// Converted from `e_race2` in `map/map.hpp`.
public enum Race2: Int, CaseIterable, Sendable {
    case goblin = 1
    case kobold = 2
    case orc = 3
    case golem = 4
    case guardian = 5
    case ninja = 6
    case gvg = 7
    case battlefield = 8
    case treasure = 9
    case biolab = 10
    case manuk = 11
    case splendide = 12
    case scaraba = 13
    case ogh_atk_def = 14
    case ogh_hidden = 15
    case bio5_swordman_thief = 16
    case bio5_acolyte_merchant = 17
    case bio5_mage_archer = 18
    case bio5_mvp = 19
    case clocktower = 20
    case thanatos = 21
    case faceworm = 22
    case hearthunter = 23
    case rockridge = 24
    case werner_lab = 25
    case temple_demon = 26
    case illusion_vampire = 27
    case malangdo = 28
    case ep172alpha = 29
    case ep172beta = 30
    case ep172bath = 31
    case illusion_turtle = 32
    case rachel_sanctuary = 33
    case illusion_luanda = 34
    case illusion_frozen = 35
    case illusion_moonlight = 36
    case ep16_def = 37
    case edda_arunafeltz = 38
    case lasagna = 39
    case glast_heim_abyss = 40
}

extension Race2: CodingKey {
    public var stringValue: String {
        switch self {
        case .goblin: "GOBLIN"
        case .kobold: "KOBOLD"
        case .orc: "ORC"
        case .golem: "GOLEM"
        case .guardian: "GUARDIAN"
        case .ninja: "NINJA"
        case .gvg: "GVG"
        case .battlefield: "BATTLEFIELD"
        case .treasure: "TREASURE"
        case .biolab: "BIOLAB"
        case .manuk: "MANUK"
        case .splendide: "SPLENDIDE"
        case .scaraba: "SCARABA"
        case .ogh_atk_def: "OGH_ATK_DEF"
        case .ogh_hidden: "OGH_HIDDEN"
        case .bio5_swordman_thief: "BIO5_SWORDMAN_THIEF"
        case .bio5_acolyte_merchant: "BIO5_ACOLYTE_MERCHANT"
        case .bio5_mage_archer: "BIO5_MAGE_ARCHER"
        case .bio5_mvp: "BIO5_MVP"
        case .clocktower: "CLOCKTOWER"
        case .thanatos: "THANATOS"
        case .faceworm: "FACEWORM"
        case .hearthunter: "HEARTHUNTER"
        case .rockridge: "ROCKRIDGE"
        case .werner_lab: "WERNER_LAB"
        case .temple_demon: "TEMPLE_DEMON"
        case .illusion_vampire: "ILLUSION_VAMPIRE"
        case .malangdo: "MALANGDO"
        case .ep172alpha: "EP172ALPHA"
        case .ep172beta: "EP172BETA"
        case .ep172bath: "EP172BATH"
        case .illusion_turtle: "ILLUSION_TURTLE"
        case .rachel_sanctuary: "RACHEL_SANCTUARY"
        case .illusion_luanda: "ILLUSION_LUANDA"
        case .illusion_frozen: "ILLUSION_FROZEN"
        case .illusion_moonlight: "ILLUSION_MOONLIGHT"
        case .ep16_def: "EP16_DEF"
        case .edda_arunafeltz: "EDDA_ARUNAFELTZ"
        case .lasagna: "LASAGNA"
        case .glast_heim_abyss: "GLAST_HEIM_ABYSS"
        }
    }

    public init?(stringValue: String) {
        switch stringValue.uppercased() {
        case "GOBLIN": self = .goblin
        case "KOBOLD": self = .kobold
        case "ORC": self = .orc
        case "GOLEM": self = .golem
        case "GUARDIAN": self = .guardian
        case "NINJA": self = .ninja
        case "GVG": self = .gvg
        case "BATTLEFIELD": self = .battlefield
        case "TREASURE": self = .treasure
        case "BIOLAB": self = .biolab
        case "MANUK": self = .manuk
        case "SPLENDIDE": self = .splendide
        case "SCARABA": self = .scaraba
        case "OGH_ATK_DEF": self = .ogh_atk_def
        case "OGH_HIDDEN": self = .ogh_hidden
        case "BIO5_SWORDMAN_THIEF": self = .bio5_swordman_thief
        case "BIO5_ACOLYTE_MERCHANT": self = .bio5_acolyte_merchant
        case "BIO5_MAGE_ARCHER": self = .bio5_mage_archer
        case "BIO5_MVP": self = .bio5_mvp
        case "CLOCKTOWER": self = .clocktower
        case "THANATOS": self = .thanatos
        case "FACEWORM": self = .faceworm
        case "HEARTHUNTER": self = .hearthunter
        case "ROCKRIDGE": self = .rockridge
        case "WERNER_LAB": self = .werner_lab
        case "TEMPLE_DEMON": self = .temple_demon
        case "ILLUSION_VAMPIRE": self = .illusion_vampire
        case "MALANGDO": self = .malangdo
        case "EP172ALPHA": self = .ep172alpha
        case "EP172BETA": self = .ep172beta
        case "EP172BATH": self = .ep172bath
        case "ILLUSION_TURTLE": self = .illusion_turtle
        case "RACHEL_SANCTUARY": self = .rachel_sanctuary
        case "ILLUSION_LUANDA": self = .illusion_luanda
        case "ILLUSION_FROZEN": self = .illusion_frozen
        case "ILLUSION_MOONLIGHT": self = .illusion_moonlight
        case "EP16_DEF": self = .ep16_def
        case "EDDA_ARUNAFELTZ": self = .edda_arunafeltz
        case "LASAGNA": self = .lasagna
        case "GLAST_HEIM_ABYSS": self = .glast_heim_abyss
        default: return nil
        }
    }

    public var intValue: Int? {
        rawValue
    }

    public init?(intValue: Int) {
        self.init(rawValue: intValue)
    }
}

extension Race2: CodingKeyRepresentable {
    public var codingKey: any CodingKey {
        self
    }

    public init?<T>(codingKey: T) where T: CodingKey {
        self.init(stringValue: codingKey.stringValue)
    }
}

extension Race2: Decodable {
    public init(from decoder: any Decoder) throws {
        let container = try decoder.singleValueContainer()
        let stringValue = try container.decode(String.self)
        if let value = Self.init(stringValue: stringValue) {
            self = value
        } else {
            throw DecodingError.dataCorruptedError(in: container, debugDescription: "Could not initialize \(Self.self) from invalid string value \(stringValue)")
        }
    }
}
