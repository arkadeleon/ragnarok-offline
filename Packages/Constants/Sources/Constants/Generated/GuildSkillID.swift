//
//  GuildSkillID.swift
//  RagnarokOffline
//
//  Generated by ROCodeGenerator.
//

/// Converted from `e_guild_skill` in `common/mmo.hpp`.
public enum GuildSkillID: Int, CaseIterable, Sendable {
    case gd_approval = 10000
    case gd_kafracontract = 10001
    case gd_guardresearch = 10002
    case gd_guardup = 10003
    case gd_extension = 10004
    case gd_gloryguild = 10005
    case gd_leadership = 10006
    case gd_glorywounds = 10007
    case gd_soulcold = 10008
    case gd_hawkeyes = 10009
    case gd_battleorder = 10010
    case gd_regeneration = 10011
    case gd_restore = 10012
    case gd_emergencycall = 10013
    case gd_development = 10014
    case gd_itememergencycall = 10015
    case gd_guild_storage = 10016
    case gd_chargeshout_flag = 10017
    case gd_chargeshout_beating = 10018
    case gd_emergency_move = 10019
}

extension GuildSkillID: CodingKey {
    public var stringValue: String {
        switch self {
        case .gd_approval: "GD_APPROVAL"
        case .gd_kafracontract: "GD_KAFRACONTRACT"
        case .gd_guardresearch: "GD_GUARDRESEARCH"
        case .gd_guardup: "GD_GUARDUP"
        case .gd_extension: "GD_EXTENSION"
        case .gd_gloryguild: "GD_GLORYGUILD"
        case .gd_leadership: "GD_LEADERSHIP"
        case .gd_glorywounds: "GD_GLORYWOUNDS"
        case .gd_soulcold: "GD_SOULCOLD"
        case .gd_hawkeyes: "GD_HAWKEYES"
        case .gd_battleorder: "GD_BATTLEORDER"
        case .gd_regeneration: "GD_REGENERATION"
        case .gd_restore: "GD_RESTORE"
        case .gd_emergencycall: "GD_EMERGENCYCALL"
        case .gd_development: "GD_DEVELOPMENT"
        case .gd_itememergencycall: "GD_ITEMEMERGENCYCALL"
        case .gd_guild_storage: "GD_GUILD_STORAGE"
        case .gd_chargeshout_flag: "GD_CHARGESHOUT_FLAG"
        case .gd_chargeshout_beating: "GD_CHARGESHOUT_BEATING"
        case .gd_emergency_move: "GD_EMERGENCY_MOVE"
        }
    }

    public init?(stringValue: String) {
        switch stringValue.uppercased() {
        case "GD_APPROVAL": self = .gd_approval
        case "GD_KAFRACONTRACT": self = .gd_kafracontract
        case "GD_GUARDRESEARCH": self = .gd_guardresearch
        case "GD_GUARDUP": self = .gd_guardup
        case "GD_EXTENSION": self = .gd_extension
        case "GD_GLORYGUILD": self = .gd_gloryguild
        case "GD_LEADERSHIP": self = .gd_leadership
        case "GD_GLORYWOUNDS": self = .gd_glorywounds
        case "GD_SOULCOLD": self = .gd_soulcold
        case "GD_HAWKEYES": self = .gd_hawkeyes
        case "GD_BATTLEORDER": self = .gd_battleorder
        case "GD_REGENERATION": self = .gd_regeneration
        case "GD_RESTORE": self = .gd_restore
        case "GD_EMERGENCYCALL": self = .gd_emergencycall
        case "GD_DEVELOPMENT": self = .gd_development
        case "GD_ITEMEMERGENCYCALL": self = .gd_itememergencycall
        case "GD_GUILD_STORAGE": self = .gd_guild_storage
        case "GD_CHARGESHOUT_FLAG": self = .gd_chargeshout_flag
        case "GD_CHARGESHOUT_BEATING": self = .gd_chargeshout_beating
        case "GD_EMERGENCY_MOVE": self = .gd_emergency_move
        default: return nil
        }
    }

    public var intValue: Int? {
        rawValue
    }

    public init?(intValue: Int) {
        self.init(rawValue: intValue)
    }
}

extension GuildSkillID: CodingKeyRepresentable {
    public var codingKey: any CodingKey {
        self
    }

    public init?<T>(codingKey: T) where T: CodingKey {
        self.init(stringValue: codingKey.stringValue)
    }
}

extension GuildSkillID: Decodable {
    public init(from decoder: any Decoder) throws {
        let container = try decoder.singleValueContainer()
        let stringValue = try container.decode(String.self)
        if let value = Self.init(stringValue: stringValue) {
            self = value
        } else {
            throw DecodingError.dataCorruptedError(in: container, debugDescription: "Could not initialize \(Self.self) from invalid string value \(stringValue)")
        }
    }
}
